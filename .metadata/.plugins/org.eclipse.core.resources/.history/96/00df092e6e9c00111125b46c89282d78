import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

public class SequenceAlignment {
	private HashMap<String, String> sequenceMap;
	private ArrayList<String> nameList;
	private ArrayList<String> blosumList = new ArrayList<String>();

	public SequenceAlignment(File f) {
		read(f);
	}

	private void read(File f) {
		sequenceMap = new HashMap<String, String>();
		nameList = new ArrayList<String>();
		Scanner scan = null;
		try {
			scan = new Scanner(f);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		while (scan.hasNextLine()) {
			String s = scan.nextLine();
			if (s.startsWith(">")) {
				s = s.substring(1, s.length() - 1);
				System.out.println(s);
				nameList.add(s);
				sequenceMap.put(s, scan.nextLine());
			}
		}
	}

	public static void sheisse() {
		String y = "KQRK";
		String x = "KQRIKAAKABK";
		int M = x.length();
		int N = y.length();
		
		
		
	}
	
	public int SequenceAlignmentt(int m, int n, String x, String y, int delta, int[][] alpha) {
		int[][]	M = new int[m+1][n+1];
		for(int i = 0; i <= m; i++) {
			M[i][0] = i*delta;
		}
		for(int j = 0; j <= n; j++) {
			M[0][j] = j*delta;
		}
		
		for(int i = 1; i < m; i++) {
			for(int j = 1; j < n; j++) {
				M[i][j] = min(alpha[blosumList.indexOf(x.charAt(i-1))][blosumList.indexOf(y.charAt(j-1))] + M[i-1, j-1], delta + M[i-1, j], delta + M[i, j-1]);
			}
		}
		return 0;
	}
	

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		new SequenceAlignment(new File("Toy_FASTAs.in"));
	}

}
